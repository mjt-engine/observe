(function(a,u){typeof exports=="object"&&typeof module<"u"?u(exports):typeof define=="function"&&define.amd?define(["exports"],u):(a=typeof globalThis<"u"?globalThis:a||self,u(a.Module={}))})(this,function(a){"use strict";const u=t=>t==null||Number.isNaN(t),p={isDefined:t=>!u(t),isUndefined:u},{isDefined:d,isUndefined:h}=p,L=(t,e,n)=>{if(h(t))return;const r=e.get(t);if(d(r))return r;if(d(n)){const s=n();return e.set(t,s),s}},b={create:()=>{const t=new Map;let e=performance.now();const n={get:(r,s)=>L(r,t,s),set:(r,s)=>(t.set(r,s),n),delete:r=>t.delete(r),entries:()=>Array.from(t.entries()),clear:()=>t.clear(),size:()=>t.size,findKeys:r=>Array.from(t.entries()).filter(([o,i])=>i===r).map(([o,i])=>o),lastUpdate:()=>e};return n}},w=t=>e=>{if(typeof t=="string")return new RegExp(t).test(e.traceId);const{traceId:n,message:r,extra:s=()=>!0,timestamp:o=()=>!0}=t;return!(n&&!new RegExp(n).test(e.traceId)||r&&!new RegExp(r).test(e.message)||e.timestamp&&!o(e.timestamp)||e.extra&&!s(e.extra))},M=t=>e=>{for(const n of t)if(w(n)(e))return n;return!1},x=t=>e=>typeof t=="string"?e:t.transform?t.transform(e):e,O=t=>{const e=[],n={length:0,push:r=>{e.length>=t&&e.shift(),e.push(r),n.length=e.length},get:()=>e,clear:()=>{e.length=0,n.length=0}};return n},T=()=>{let t=performance.now(),e;const n={end:()=>(e=performance.now(),n),getDuration:()=>(e??performance.now())-t};return n},$=(t=100)=>{let e=0,n=O(t);const r={time:()=>{const s=T();return n.push(s),s},addCount:s=>{e+=s},getCount:()=>e,clearCount:()=>(e=0,r),getTimers:()=>n.get(),clearTimers:()=>(n.clear(),r)};return r},f=({logMatchers:t=[],logger:e=console.log,clock:n=performance}={})=>{const r=b.create(),s={start:(o,...i)=>{s.addLog({traceId:o,message:"start",extra:i})},getStats:o=>r.get(o,()=>$()),addLog:({traceId:o,message:i,timestamp:y=n.now(),extra:C=[]})=>{const g={traceId:o,message:i,timestamp:y,extra:C},l=M(t)(g);if(!l)return;const c=x(l)(g);e(`${c.timestamp} ${c.traceId}: ${c.message}`,...c.extra??[])},end:(o,...i)=>{s.addLog({traceId:o,message:"end",extra:i})}};return s},m=(t="",e=f())=>{e.start(t);const n={span:r=>m(`${t}.${r}`,e),count:(r=1)=>(e.getStats(t).addCount(r),n),time:()=>e.getStats(t).time(),end:()=>(e.end(t),n),log:(r,...s)=>(e.addLog({traceId:t,message:r,extra:s}),n)};return n},v=t=>{const e=t.split("."),n=e.shift(),r=e.join(".");return{root:n,segments:e,subpath:r}};a.Observe=m,a.ObserveAgent=f,a.parseTraceId=v,Object.defineProperty(a,Symbol.toStringTag,{value:"Module"})});
