(function(n,f){typeof exports=="object"&&typeof module<"u"?f(exports):typeof define=="function"&&define.amd?define(["exports"],f):(n=typeof globalThis<"u"?globalThis:n||self,f(n.Module={}))})(this,function(n){"use strict";const f=t=>e=>{if(typeof t=="string")return new RegExp(t).test(e.traceId);const{traceId:r,message:s,extra:o=()=>!0,timestamp:a=()=>!0}=t;return!(r&&!new RegExp(r).test(e.traceId)||s&&!new RegExp(s).test(e.message)||e.timestamp&&!a(e.timestamp)||e.extra&&!o(e.extra))},c=t=>e=>{for(const r of t)if(f(r)(e))return r;return!1},u=t=>e=>typeof t=="string"?e:t.transform?t.transform(e):e,d=({logMatchers:t=[],logger:e=console.log,clock:r=performance}={})=>{const s={start:(o,...a)=>{s.addLog({traceId:o,message:"start",extra:a})},addLog:({traceId:o,message:a,timestamp:h=r.now(),extra:M=[]})=>{const g={traceId:o,message:a,timestamp:h,extra:M},p=c(t)(g);if(!p)return;const i=u(p)(g);e(`${i.timestamp} ${i.traceId}: ${i.message}`,...i.extra??[])},end:(o,...a)=>{s.addLog({traceId:o,message:"end",extra:a})}};return s},m=(t="",e=d())=>{e.start(t);const r={span:s=>m(`${t}.${s}`,e),end:()=>(e.end(t),r),log:(s,...o)=>(e.addLog({traceId:t,message:s,extra:o}),r)};return r},L=t=>{const e=t.split("."),r=e.shift(),s=e.join(".");return{root:r,segments:e,subpath:s}};n.Observe=m,n.ObserveAgent=d,n.atLeastOneLogMatcherMatchesLogEntry=c,n.logMatcherMatchesLogEntry=f,n.parseTraceId=L,n.transformLogEntry=u,Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})});
