(function(o,d){typeof exports=="object"&&typeof module<"u"?d(exports):typeof define=="function"&&define.amd?define(["exports"],d):(o=typeof globalThis<"u"?globalThis:o||self,d(o.Module={}))})(this,function(o){"use strict";const d=t=>n=>{if(t.length===0)return!1;const s=t.map(e=>new RegExp(e));for(const e of s)if(e.test(n))return!0;return!1},f=({logMatchers:t=[],logger:n=console.log,clock:s=performance}={})=>{const e={start:(r,...u)=>{e.addLog({traceId:r,message:"start",extra:u})},addLog:({traceId:r,message:u,timestamp:a=s.now(),extra:p=[]})=>{d(t)(r)&&n(`${a} ${r}: ${u}`,...p)},end:(r,...u)=>{e.addLog({traceId:r,message:"end",extra:u})}};return e},i=(t="",n=f())=>{n.start(t);const s={span:e=>i(`${t}.${e}`,n),end:()=>(n.end(t),s),log:(e,...r)=>(n.addLog({traceId:t,message:e,extra:r}),s)};return s},c=t=>{const n=t.split("."),s=n.shift(),e=n.join(".");return{root:s,segments:n,subpath:e}};o.Observe=i,o.ObserveAgent=f,o.parseTraceId=c,Object.defineProperty(o,Symbol.toStringTag,{value:"Module"})});
