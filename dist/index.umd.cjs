(function(o,i){typeof exports=="object"&&typeof module<"u"?i(exports):typeof define=="function"&&define.amd?define(["exports"],i):(o=typeof globalThis<"u"?globalThis:o||self,i(o.Module={}))})(this,function(o){"use strict";const i=s=>e=>{if(s.length===0)return!1;for(const t of s){if(t.startsWith("*")&&e.endsWith(t.slice(1))||t.endsWith("*")&&e.startsWith(t.slice(0,-1)))return!0;if(t.includes("*")){const n=t.split("*")[0],r=t.split("*")[1];if(e.startsWith(n)&&e.endsWith(r))return!0}if(e.startsWith(t))return!0}return!1},u=({logMatchers:s=[],logger:e=console.log,clock:t=performance}={})=>{const n={start:(r,...f)=>{n.addLog({traceId:r,message:"start",extra:f})},addLog:({traceId:r,message:f,timestamp:c=t.now(),extra:a=[]})=>{i(s)(r)&&e(`${c} ${r}: ${f}`,...a)},end:(r,...f)=>{n.addLog({traceId:r,message:"end",extra:f})}};return n},d=(s="",e=u())=>{e.start(s);const t={span:n=>d(`${s}.${n}`,e),end:()=>(e.end(s),t),log:(n,...r)=>(e.addLog({traceId:s,message:n,extra:r}),t)};return t},l=s=>{const e=s.split("."),t=e.shift(),n=e.join(".");return{root:t,segments:e,subpath:n}};o.Observe=d,o.ObserveAgent=u,o.parseTraceId=l,Object.defineProperty(o,Symbol.toStringTag,{value:"Module"})});
