(function(r,f){typeof exports=="object"&&typeof module<"u"?f(exports):typeof define=="function"&&define.amd?define(["exports"],f):(r=typeof globalThis<"u"?globalThis:r||self,f(r.Module={}))})(this,function(r){"use strict";const f=t=>e=>{if(typeof t=="string")return new RegExp(t).test(e.traceId);const{traceId:s,message:n,extra:o=()=>!0,timestamp:a=()=>!0}=t;return!(s&&!new RegExp(s).test(e.traceId)||n&&!new RegExp(n).test(e.message)||e.timestamp&&!a(e.timestamp)||e.extra&&!o(e.extra))},u=t=>e=>{for(const s of t)if(f(s)(e))return!0;return!1},d=({logMatchers:t=[],logger:e=console.log,clock:s=performance}={})=>{const n={start:(o,...a)=>{n.addLog({traceId:o,message:"start",extra:a})},addLog:({traceId:o,message:a,timestamp:c=s.now(),extra:g=[]})=>{u(t)({traceId:o,message:a,timestamp:c,extra:g})&&e(`${c} ${o}: ${a}`,...g)},end:(o,...a)=>{n.addLog({traceId:o,message:"end",extra:a})}};return n},i=(t="",e=d())=>{e.start(t);const s={span:n=>i(`${t}.${n}`,e),end:()=>(e.end(t),s),log:(n,...o)=>(e.addLog({traceId:t,message:n,extra:o}),s)};return s},p=t=>{const e=t.split("."),s=e.shift(),n=e.join(".");return{root:s,segments:e,subpath:n}};r.Observe=i,r.ObserveAgent=d,r.atLeastOneLogMatcherMatchesLogEntry=u,r.logMatcherMatchesLogEntry=f,r.parseTraceId=p,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});
